# coding: utf-8

"""
    dotCMS REST API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 3
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from dotcms_rest_client import schemas  # noqa: F401


class PullRelatedForm(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """


    class MetaOapg:
        required = {
            "identifier",
            "fieldVariable",
            "offset",
            "limit",
            "orderBy",
        }
        
        class properties:
            fieldVariable = schemas.StrSchema
            identifier = schemas.StrSchema
            limit = schemas.Int32Schema
            offset = schemas.Int32Schema
            orderBy = schemas.StrSchema
            condition = schemas.StrSchema
            __annotations__ = {
                "fieldVariable": fieldVariable,
                "identifier": identifier,
                "limit": limit,
                "offset": offset,
                "orderBy": orderBy,
                "condition": condition,
            }
    
    identifier: MetaOapg.properties.identifier
    fieldVariable: MetaOapg.properties.fieldVariable
    offset: MetaOapg.properties.offset
    limit: MetaOapg.properties.limit
    orderBy: MetaOapg.properties.orderBy
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["fieldVariable"]) -> MetaOapg.properties.fieldVariable: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["identifier"]) -> MetaOapg.properties.identifier: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["limit"]) -> MetaOapg.properties.limit: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["offset"]) -> MetaOapg.properties.offset: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["orderBy"]) -> MetaOapg.properties.orderBy: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["condition"]) -> MetaOapg.properties.condition: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["fieldVariable", "identifier", "limit", "offset", "orderBy", "condition", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["fieldVariable"]) -> MetaOapg.properties.fieldVariable: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["identifier"]) -> MetaOapg.properties.identifier: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["limit"]) -> MetaOapg.properties.limit: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["offset"]) -> MetaOapg.properties.offset: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["orderBy"]) -> MetaOapg.properties.orderBy: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["condition"]) -> typing.Union[MetaOapg.properties.condition, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["fieldVariable", "identifier", "limit", "offset", "orderBy", "condition", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        identifier: typing.Union[MetaOapg.properties.identifier, str, ],
        fieldVariable: typing.Union[MetaOapg.properties.fieldVariable, str, ],
        offset: typing.Union[MetaOapg.properties.offset, decimal.Decimal, int, ],
        limit: typing.Union[MetaOapg.properties.limit, decimal.Decimal, int, ],
        orderBy: typing.Union[MetaOapg.properties.orderBy, str, ],
        condition: typing.Union[MetaOapg.properties.condition, str, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'PullRelatedForm':
        return super().__new__(
            cls,
            *_args,
            identifier=identifier,
            fieldVariable=fieldVariable,
            offset=offset,
            limit=limit,
            orderBy=orderBy,
            condition=condition,
            _configuration=_configuration,
            **kwargs,
        )
