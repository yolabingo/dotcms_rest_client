# coding: utf-8

"""
    dotCMS REST API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 3
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from dotcms_rest_client import schemas  # noqa: F401


class User(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """


    class MetaOapg:
        
        class properties:
            modificationDate = schemas.DateTimeSchema
            fullName = schemas.StrSchema
            
            
            class locale(
                schemas.DictSchema
            ):
            
            
                class MetaOapg:
                    
                    class properties:
                        displayName = schemas.StrSchema
                        script = schemas.StrSchema
                        country = schemas.StrSchema
                        variant = schemas.StrSchema
                        
                        
                        class extensionKeys(
                            schemas.ListSchema
                        ):
                        
                        
                            class MetaOapg:
                                unique_items = True
                                items = schemas.StrSchema
                        
                            def __new__(
                                cls,
                                _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
                                _configuration: typing.Optional[schemas.Configuration] = None,
                            ) -> 'extensionKeys':
                                return super().__new__(
                                    cls,
                                    _arg,
                                    _configuration=_configuration,
                                )
                        
                            def __getitem__(self, i: int) -> MetaOapg.items:
                                return super().__getitem__(i)
                        
                        
                        class unicodeLocaleAttributes(
                            schemas.ListSchema
                        ):
                        
                        
                            class MetaOapg:
                                unique_items = True
                                items = schemas.StrSchema
                        
                            def __new__(
                                cls,
                                _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
                                _configuration: typing.Optional[schemas.Configuration] = None,
                            ) -> 'unicodeLocaleAttributes':
                                return super().__new__(
                                    cls,
                                    _arg,
                                    _configuration=_configuration,
                                )
                        
                            def __getitem__(self, i: int) -> MetaOapg.items:
                                return super().__getitem__(i)
                        
                        
                        class unicodeLocaleKeys(
                            schemas.ListSchema
                        ):
                        
                        
                            class MetaOapg:
                                unique_items = True
                                items = schemas.StrSchema
                        
                            def __new__(
                                cls,
                                _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
                                _configuration: typing.Optional[schemas.Configuration] = None,
                            ) -> 'unicodeLocaleKeys':
                                return super().__new__(
                                    cls,
                                    _arg,
                                    _configuration=_configuration,
                                )
                        
                            def __getitem__(self, i: int) -> MetaOapg.items:
                                return super().__getitem__(i)
                        iso3Language = schemas.StrSchema
                        iso3Country = schemas.StrSchema
                        displayLanguage = schemas.StrSchema
                        displayScript = schemas.StrSchema
                        displayCountry = schemas.StrSchema
                        displayVariant = schemas.StrSchema
                        language = schemas.StrSchema
                        __annotations__ = {
                            "displayName": displayName,
                            "script": script,
                            "country": country,
                            "variant": variant,
                            "extensionKeys": extensionKeys,
                            "unicodeLocaleAttributes": unicodeLocaleAttributes,
                            "unicodeLocaleKeys": unicodeLocaleKeys,
                            "iso3Language": iso3Language,
                            "iso3Country": iso3Country,
                            "displayLanguage": displayLanguage,
                            "displayScript": displayScript,
                            "displayCountry": displayCountry,
                            "displayVariant": displayVariant,
                            "language": language,
                        }
                
                @typing.overload
                def __getitem__(self, name: typing_extensions.Literal["displayName"]) -> MetaOapg.properties.displayName: ...
                
                @typing.overload
                def __getitem__(self, name: typing_extensions.Literal["script"]) -> MetaOapg.properties.script: ...
                
                @typing.overload
                def __getitem__(self, name: typing_extensions.Literal["country"]) -> MetaOapg.properties.country: ...
                
                @typing.overload
                def __getitem__(self, name: typing_extensions.Literal["variant"]) -> MetaOapg.properties.variant: ...
                
                @typing.overload
                def __getitem__(self, name: typing_extensions.Literal["extensionKeys"]) -> MetaOapg.properties.extensionKeys: ...
                
                @typing.overload
                def __getitem__(self, name: typing_extensions.Literal["unicodeLocaleAttributes"]) -> MetaOapg.properties.unicodeLocaleAttributes: ...
                
                @typing.overload
                def __getitem__(self, name: typing_extensions.Literal["unicodeLocaleKeys"]) -> MetaOapg.properties.unicodeLocaleKeys: ...
                
                @typing.overload
                def __getitem__(self, name: typing_extensions.Literal["iso3Language"]) -> MetaOapg.properties.iso3Language: ...
                
                @typing.overload
                def __getitem__(self, name: typing_extensions.Literal["iso3Country"]) -> MetaOapg.properties.iso3Country: ...
                
                @typing.overload
                def __getitem__(self, name: typing_extensions.Literal["displayLanguage"]) -> MetaOapg.properties.displayLanguage: ...
                
                @typing.overload
                def __getitem__(self, name: typing_extensions.Literal["displayScript"]) -> MetaOapg.properties.displayScript: ...
                
                @typing.overload
                def __getitem__(self, name: typing_extensions.Literal["displayCountry"]) -> MetaOapg.properties.displayCountry: ...
                
                @typing.overload
                def __getitem__(self, name: typing_extensions.Literal["displayVariant"]) -> MetaOapg.properties.displayVariant: ...
                
                @typing.overload
                def __getitem__(self, name: typing_extensions.Literal["language"]) -> MetaOapg.properties.language: ...
                
                @typing.overload
                def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
                
                def __getitem__(self, name: typing.Union[typing_extensions.Literal["displayName", "script", "country", "variant", "extensionKeys", "unicodeLocaleAttributes", "unicodeLocaleKeys", "iso3Language", "iso3Country", "displayLanguage", "displayScript", "displayCountry", "displayVariant", "language", ], str]):
                    # dict_instance[name] accessor
                    return super().__getitem__(name)
                
                
                @typing.overload
                def get_item_oapg(self, name: typing_extensions.Literal["displayName"]) -> typing.Union[MetaOapg.properties.displayName, schemas.Unset]: ...
                
                @typing.overload
                def get_item_oapg(self, name: typing_extensions.Literal["script"]) -> typing.Union[MetaOapg.properties.script, schemas.Unset]: ...
                
                @typing.overload
                def get_item_oapg(self, name: typing_extensions.Literal["country"]) -> typing.Union[MetaOapg.properties.country, schemas.Unset]: ...
                
                @typing.overload
                def get_item_oapg(self, name: typing_extensions.Literal["variant"]) -> typing.Union[MetaOapg.properties.variant, schemas.Unset]: ...
                
                @typing.overload
                def get_item_oapg(self, name: typing_extensions.Literal["extensionKeys"]) -> typing.Union[MetaOapg.properties.extensionKeys, schemas.Unset]: ...
                
                @typing.overload
                def get_item_oapg(self, name: typing_extensions.Literal["unicodeLocaleAttributes"]) -> typing.Union[MetaOapg.properties.unicodeLocaleAttributes, schemas.Unset]: ...
                
                @typing.overload
                def get_item_oapg(self, name: typing_extensions.Literal["unicodeLocaleKeys"]) -> typing.Union[MetaOapg.properties.unicodeLocaleKeys, schemas.Unset]: ...
                
                @typing.overload
                def get_item_oapg(self, name: typing_extensions.Literal["iso3Language"]) -> typing.Union[MetaOapg.properties.iso3Language, schemas.Unset]: ...
                
                @typing.overload
                def get_item_oapg(self, name: typing_extensions.Literal["iso3Country"]) -> typing.Union[MetaOapg.properties.iso3Country, schemas.Unset]: ...
                
                @typing.overload
                def get_item_oapg(self, name: typing_extensions.Literal["displayLanguage"]) -> typing.Union[MetaOapg.properties.displayLanguage, schemas.Unset]: ...
                
                @typing.overload
                def get_item_oapg(self, name: typing_extensions.Literal["displayScript"]) -> typing.Union[MetaOapg.properties.displayScript, schemas.Unset]: ...
                
                @typing.overload
                def get_item_oapg(self, name: typing_extensions.Literal["displayCountry"]) -> typing.Union[MetaOapg.properties.displayCountry, schemas.Unset]: ...
                
                @typing.overload
                def get_item_oapg(self, name: typing_extensions.Literal["displayVariant"]) -> typing.Union[MetaOapg.properties.displayVariant, schemas.Unset]: ...
                
                @typing.overload
                def get_item_oapg(self, name: typing_extensions.Literal["language"]) -> typing.Union[MetaOapg.properties.language, schemas.Unset]: ...
                
                @typing.overload
                def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
                
                def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["displayName", "script", "country", "variant", "extensionKeys", "unicodeLocaleAttributes", "unicodeLocaleKeys", "iso3Language", "iso3Country", "displayLanguage", "displayScript", "displayCountry", "displayVariant", "language", ], str]):
                    return super().get_item_oapg(name)
                
            
                def __new__(
                    cls,
                    *_args: typing.Union[dict, frozendict.frozendict, ],
                    displayName: typing.Union[MetaOapg.properties.displayName, str, schemas.Unset] = schemas.unset,
                    script: typing.Union[MetaOapg.properties.script, str, schemas.Unset] = schemas.unset,
                    country: typing.Union[MetaOapg.properties.country, str, schemas.Unset] = schemas.unset,
                    variant: typing.Union[MetaOapg.properties.variant, str, schemas.Unset] = schemas.unset,
                    extensionKeys: typing.Union[MetaOapg.properties.extensionKeys, list, tuple, schemas.Unset] = schemas.unset,
                    unicodeLocaleAttributes: typing.Union[MetaOapg.properties.unicodeLocaleAttributes, list, tuple, schemas.Unset] = schemas.unset,
                    unicodeLocaleKeys: typing.Union[MetaOapg.properties.unicodeLocaleKeys, list, tuple, schemas.Unset] = schemas.unset,
                    iso3Language: typing.Union[MetaOapg.properties.iso3Language, str, schemas.Unset] = schemas.unset,
                    iso3Country: typing.Union[MetaOapg.properties.iso3Country, str, schemas.Unset] = schemas.unset,
                    displayLanguage: typing.Union[MetaOapg.properties.displayLanguage, str, schemas.Unset] = schemas.unset,
                    displayScript: typing.Union[MetaOapg.properties.displayScript, str, schemas.Unset] = schemas.unset,
                    displayCountry: typing.Union[MetaOapg.properties.displayCountry, str, schemas.Unset] = schemas.unset,
                    displayVariant: typing.Union[MetaOapg.properties.displayVariant, str, schemas.Unset] = schemas.unset,
                    language: typing.Union[MetaOapg.properties.language, str, schemas.Unset] = schemas.unset,
                    _configuration: typing.Optional[schemas.Configuration] = None,
                    **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
                ) -> 'locale':
                    return super().__new__(
                        cls,
                        *_args,
                        displayName=displayName,
                        script=script,
                        country=country,
                        variant=variant,
                        extensionKeys=extensionKeys,
                        unicodeLocaleAttributes=unicodeLocaleAttributes,
                        unicodeLocaleKeys=unicodeLocaleKeys,
                        iso3Language=iso3Language,
                        iso3Country=iso3Country,
                        displayLanguage=displayLanguage,
                        displayScript=displayScript,
                        displayCountry=displayCountry,
                        displayVariant=displayVariant,
                        language=language,
                        _configuration=_configuration,
                        **kwargs,
                    )
            
            
            class timeZone(
                schemas.DictSchema
            ):
            
            
                class MetaOapg:
                    
                    class properties:
                        displayName = schemas.StrSchema
                        id = schemas.StrSchema
                        rawOffset = schemas.Int32Schema
                        dstsavings = schemas.Int32Schema
                        __annotations__ = {
                            "displayName": displayName,
                            "id": id,
                            "rawOffset": rawOffset,
                            "dstsavings": dstsavings,
                        }
                
                @typing.overload
                def __getitem__(self, name: typing_extensions.Literal["displayName"]) -> MetaOapg.properties.displayName: ...
                
                @typing.overload
                def __getitem__(self, name: typing_extensions.Literal["id"]) -> MetaOapg.properties.id: ...
                
                @typing.overload
                def __getitem__(self, name: typing_extensions.Literal["rawOffset"]) -> MetaOapg.properties.rawOffset: ...
                
                @typing.overload
                def __getitem__(self, name: typing_extensions.Literal["dstsavings"]) -> MetaOapg.properties.dstsavings: ...
                
                @typing.overload
                def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
                
                def __getitem__(self, name: typing.Union[typing_extensions.Literal["displayName", "id", "rawOffset", "dstsavings", ], str]):
                    # dict_instance[name] accessor
                    return super().__getitem__(name)
                
                
                @typing.overload
                def get_item_oapg(self, name: typing_extensions.Literal["displayName"]) -> typing.Union[MetaOapg.properties.displayName, schemas.Unset]: ...
                
                @typing.overload
                def get_item_oapg(self, name: typing_extensions.Literal["id"]) -> typing.Union[MetaOapg.properties.id, schemas.Unset]: ...
                
                @typing.overload
                def get_item_oapg(self, name: typing_extensions.Literal["rawOffset"]) -> typing.Union[MetaOapg.properties.rawOffset, schemas.Unset]: ...
                
                @typing.overload
                def get_item_oapg(self, name: typing_extensions.Literal["dstsavings"]) -> typing.Union[MetaOapg.properties.dstsavings, schemas.Unset]: ...
                
                @typing.overload
                def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
                
                def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["displayName", "id", "rawOffset", "dstsavings", ], str]):
                    return super().get_item_oapg(name)
                
            
                def __new__(
                    cls,
                    *_args: typing.Union[dict, frozendict.frozendict, ],
                    displayName: typing.Union[MetaOapg.properties.displayName, str, schemas.Unset] = schemas.unset,
                    id: typing.Union[MetaOapg.properties.id, str, schemas.Unset] = schemas.unset,
                    rawOffset: typing.Union[MetaOapg.properties.rawOffset, decimal.Decimal, int, schemas.Unset] = schemas.unset,
                    dstsavings: typing.Union[MetaOapg.properties.dstsavings, decimal.Decimal, int, schemas.Unset] = schemas.unset,
                    _configuration: typing.Optional[schemas.Configuration] = None,
                    **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
                ) -> 'timeZone':
                    return super().__new__(
                        cls,
                        *_args,
                        displayName=displayName,
                        id=id,
                        rawOffset=rawOffset,
                        dstsavings=dstsavings,
                        _configuration=_configuration,
                        **kwargs,
                    )
            defaultUser = schemas.BoolSchema
            companyId = schemas.StrSchema
            actualCompanyId = schemas.StrSchema
            passwordExpired = schemas.BoolSchema
            female = schemas.BoolSchema
            languageId = schemas.StrSchema
            timeZoneId = schemas.StrSchema
            resolution = schemas.StrSchema
            refreshRate = schemas.StrSchema
            recipientId = schemas.StrSchema
            recipientName = schemas.StrSchema
            recipientAddress = schemas.StrSchema
            recipientInternetAddress = schemas.StrSchema
            multipleRecipients = schemas.BoolSchema
            anonymousUser = schemas.BoolSchema
        
            @staticmethod
            def userRole() -> typing.Type['Role']:
                return Role
            password = schemas.StrSchema
            firstName = schemas.StrSchema
            lastName = schemas.StrSchema
            emailAddress = schemas.StrSchema
            userId = schemas.StrSchema
            
            
            class additionalInfo(
                schemas.DictSchema
            ):
            
            
                class MetaOapg:
                    additional_properties = schemas.DictSchema
                
                def __getitem__(self, name: typing.Union[str, ]) -> MetaOapg.additional_properties:
                    # dict_instance[name] accessor
                    return super().__getitem__(name)
                
                def get_item_oapg(self, name: typing.Union[str, ]) -> MetaOapg.additional_properties:
                    return super().get_item_oapg(name)
            
                def __new__(
                    cls,
                    *_args: typing.Union[dict, frozendict.frozendict, ],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                    **kwargs: typing.Union[MetaOapg.additional_properties, dict, frozendict.frozendict, ],
                ) -> 'additionalInfo':
                    return super().__new__(
                        cls,
                        *_args,
                        _configuration=_configuration,
                        **kwargs,
                    )
            passwordExpirationDate = schemas.DateTimeSchema
            middleName = schemas.StrSchema
            male = schemas.BoolSchema
            skinId = schemas.StrSchema
            createDate = schemas.DateTimeSchema
            loginDate = schemas.DateTimeSchema
            loginIP = schemas.StrSchema
            lastLoginDate = schemas.DateTimeSchema
            lastLoginIP = schemas.StrSchema
            failedLoginAttempts = schemas.Int32Schema
            agreedToTermsOfUse = schemas.BoolSchema
            active = schemas.BoolSchema
            birthday = schemas.DateTimeSchema
            comments = schemas.StrSchema
            nickName = schemas.StrSchema
            deleteInProgress = schemas.BoolSchema
            deleteDate = schemas.DateTimeSchema
            passwordReset = schemas.BoolSchema
            passwordEncrypted = schemas.BoolSchema
            smsId = schemas.StrSchema
            aimId = schemas.StrSchema
            icqId = schemas.StrSchema
            msnId = schemas.StrSchema
            ymId = schemas.StrSchema
            favoriteActivity = schemas.StrSchema
            favoriteBibleVerse = schemas.StrSchema
            favoriteFood = schemas.StrSchema
            favoriteMovie = schemas.StrSchema
            favoriteMusic = schemas.StrSchema
            dottedSkins = schemas.BoolSchema
            roundedSkins = schemas.BoolSchema
            greeting = schemas.StrSchema
            layoutIds = schemas.StrSchema
            new = schemas.BoolSchema
            modified = schemas.BoolSchema
            __annotations__ = {
                "modificationDate": modificationDate,
                "fullName": fullName,
                "locale": locale,
                "timeZone": timeZone,
                "defaultUser": defaultUser,
                "companyId": companyId,
                "actualCompanyId": actualCompanyId,
                "passwordExpired": passwordExpired,
                "female": female,
                "languageId": languageId,
                "timeZoneId": timeZoneId,
                "resolution": resolution,
                "refreshRate": refreshRate,
                "recipientId": recipientId,
                "recipientName": recipientName,
                "recipientAddress": recipientAddress,
                "recipientInternetAddress": recipientInternetAddress,
                "multipleRecipients": multipleRecipients,
                "anonymousUser": anonymousUser,
                "userRole": userRole,
                "password": password,
                "firstName": firstName,
                "lastName": lastName,
                "emailAddress": emailAddress,
                "userId": userId,
                "additionalInfo": additionalInfo,
                "passwordExpirationDate": passwordExpirationDate,
                "middleName": middleName,
                "male": male,
                "skinId": skinId,
                "createDate": createDate,
                "loginDate": loginDate,
                "loginIP": loginIP,
                "lastLoginDate": lastLoginDate,
                "lastLoginIP": lastLoginIP,
                "failedLoginAttempts": failedLoginAttempts,
                "agreedToTermsOfUse": agreedToTermsOfUse,
                "active": active,
                "birthday": birthday,
                "comments": comments,
                "nickName": nickName,
                "deleteInProgress": deleteInProgress,
                "deleteDate": deleteDate,
                "passwordReset": passwordReset,
                "passwordEncrypted": passwordEncrypted,
                "smsId": smsId,
                "aimId": aimId,
                "icqId": icqId,
                "msnId": msnId,
                "ymId": ymId,
                "favoriteActivity": favoriteActivity,
                "favoriteBibleVerse": favoriteBibleVerse,
                "favoriteFood": favoriteFood,
                "favoriteMovie": favoriteMovie,
                "favoriteMusic": favoriteMusic,
                "dottedSkins": dottedSkins,
                "roundedSkins": roundedSkins,
                "greeting": greeting,
                "layoutIds": layoutIds,
                "new": new,
                "modified": modified,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["modificationDate"]) -> MetaOapg.properties.modificationDate: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["fullName"]) -> MetaOapg.properties.fullName: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["locale"]) -> MetaOapg.properties.locale: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["timeZone"]) -> MetaOapg.properties.timeZone: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["defaultUser"]) -> MetaOapg.properties.defaultUser: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["companyId"]) -> MetaOapg.properties.companyId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["actualCompanyId"]) -> MetaOapg.properties.actualCompanyId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["passwordExpired"]) -> MetaOapg.properties.passwordExpired: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["female"]) -> MetaOapg.properties.female: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["languageId"]) -> MetaOapg.properties.languageId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["timeZoneId"]) -> MetaOapg.properties.timeZoneId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["resolution"]) -> MetaOapg.properties.resolution: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["refreshRate"]) -> MetaOapg.properties.refreshRate: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["recipientId"]) -> MetaOapg.properties.recipientId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["recipientName"]) -> MetaOapg.properties.recipientName: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["recipientAddress"]) -> MetaOapg.properties.recipientAddress: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["recipientInternetAddress"]) -> MetaOapg.properties.recipientInternetAddress: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["multipleRecipients"]) -> MetaOapg.properties.multipleRecipients: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["anonymousUser"]) -> MetaOapg.properties.anonymousUser: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["userRole"]) -> 'Role': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["password"]) -> MetaOapg.properties.password: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["firstName"]) -> MetaOapg.properties.firstName: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["lastName"]) -> MetaOapg.properties.lastName: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["emailAddress"]) -> MetaOapg.properties.emailAddress: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["userId"]) -> MetaOapg.properties.userId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["additionalInfo"]) -> MetaOapg.properties.additionalInfo: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["passwordExpirationDate"]) -> MetaOapg.properties.passwordExpirationDate: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["middleName"]) -> MetaOapg.properties.middleName: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["male"]) -> MetaOapg.properties.male: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["skinId"]) -> MetaOapg.properties.skinId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["createDate"]) -> MetaOapg.properties.createDate: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["loginDate"]) -> MetaOapg.properties.loginDate: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["loginIP"]) -> MetaOapg.properties.loginIP: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["lastLoginDate"]) -> MetaOapg.properties.lastLoginDate: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["lastLoginIP"]) -> MetaOapg.properties.lastLoginIP: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["failedLoginAttempts"]) -> MetaOapg.properties.failedLoginAttempts: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["agreedToTermsOfUse"]) -> MetaOapg.properties.agreedToTermsOfUse: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["active"]) -> MetaOapg.properties.active: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["birthday"]) -> MetaOapg.properties.birthday: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["comments"]) -> MetaOapg.properties.comments: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["nickName"]) -> MetaOapg.properties.nickName: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["deleteInProgress"]) -> MetaOapg.properties.deleteInProgress: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["deleteDate"]) -> MetaOapg.properties.deleteDate: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["passwordReset"]) -> MetaOapg.properties.passwordReset: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["passwordEncrypted"]) -> MetaOapg.properties.passwordEncrypted: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["smsId"]) -> MetaOapg.properties.smsId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["aimId"]) -> MetaOapg.properties.aimId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["icqId"]) -> MetaOapg.properties.icqId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["msnId"]) -> MetaOapg.properties.msnId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ymId"]) -> MetaOapg.properties.ymId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["favoriteActivity"]) -> MetaOapg.properties.favoriteActivity: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["favoriteBibleVerse"]) -> MetaOapg.properties.favoriteBibleVerse: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["favoriteFood"]) -> MetaOapg.properties.favoriteFood: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["favoriteMovie"]) -> MetaOapg.properties.favoriteMovie: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["favoriteMusic"]) -> MetaOapg.properties.favoriteMusic: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["dottedSkins"]) -> MetaOapg.properties.dottedSkins: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["roundedSkins"]) -> MetaOapg.properties.roundedSkins: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["greeting"]) -> MetaOapg.properties.greeting: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["layoutIds"]) -> MetaOapg.properties.layoutIds: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["new"]) -> MetaOapg.properties.new: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["modified"]) -> MetaOapg.properties.modified: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["modificationDate", "fullName", "locale", "timeZone", "defaultUser", "companyId", "actualCompanyId", "passwordExpired", "female", "languageId", "timeZoneId", "resolution", "refreshRate", "recipientId", "recipientName", "recipientAddress", "recipientInternetAddress", "multipleRecipients", "anonymousUser", "userRole", "password", "firstName", "lastName", "emailAddress", "userId", "additionalInfo", "passwordExpirationDate", "middleName", "male", "skinId", "createDate", "loginDate", "loginIP", "lastLoginDate", "lastLoginIP", "failedLoginAttempts", "agreedToTermsOfUse", "active", "birthday", "comments", "nickName", "deleteInProgress", "deleteDate", "passwordReset", "passwordEncrypted", "smsId", "aimId", "icqId", "msnId", "ymId", "favoriteActivity", "favoriteBibleVerse", "favoriteFood", "favoriteMovie", "favoriteMusic", "dottedSkins", "roundedSkins", "greeting", "layoutIds", "new", "modified", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["modificationDate"]) -> typing.Union[MetaOapg.properties.modificationDate, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["fullName"]) -> typing.Union[MetaOapg.properties.fullName, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["locale"]) -> typing.Union[MetaOapg.properties.locale, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["timeZone"]) -> typing.Union[MetaOapg.properties.timeZone, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["defaultUser"]) -> typing.Union[MetaOapg.properties.defaultUser, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["companyId"]) -> typing.Union[MetaOapg.properties.companyId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["actualCompanyId"]) -> typing.Union[MetaOapg.properties.actualCompanyId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["passwordExpired"]) -> typing.Union[MetaOapg.properties.passwordExpired, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["female"]) -> typing.Union[MetaOapg.properties.female, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["languageId"]) -> typing.Union[MetaOapg.properties.languageId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["timeZoneId"]) -> typing.Union[MetaOapg.properties.timeZoneId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["resolution"]) -> typing.Union[MetaOapg.properties.resolution, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["refreshRate"]) -> typing.Union[MetaOapg.properties.refreshRate, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["recipientId"]) -> typing.Union[MetaOapg.properties.recipientId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["recipientName"]) -> typing.Union[MetaOapg.properties.recipientName, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["recipientAddress"]) -> typing.Union[MetaOapg.properties.recipientAddress, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["recipientInternetAddress"]) -> typing.Union[MetaOapg.properties.recipientInternetAddress, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["multipleRecipients"]) -> typing.Union[MetaOapg.properties.multipleRecipients, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["anonymousUser"]) -> typing.Union[MetaOapg.properties.anonymousUser, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["userRole"]) -> typing.Union['Role', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["password"]) -> typing.Union[MetaOapg.properties.password, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["firstName"]) -> typing.Union[MetaOapg.properties.firstName, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["lastName"]) -> typing.Union[MetaOapg.properties.lastName, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["emailAddress"]) -> typing.Union[MetaOapg.properties.emailAddress, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["userId"]) -> typing.Union[MetaOapg.properties.userId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["additionalInfo"]) -> typing.Union[MetaOapg.properties.additionalInfo, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["passwordExpirationDate"]) -> typing.Union[MetaOapg.properties.passwordExpirationDate, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["middleName"]) -> typing.Union[MetaOapg.properties.middleName, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["male"]) -> typing.Union[MetaOapg.properties.male, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["skinId"]) -> typing.Union[MetaOapg.properties.skinId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["createDate"]) -> typing.Union[MetaOapg.properties.createDate, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["loginDate"]) -> typing.Union[MetaOapg.properties.loginDate, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["loginIP"]) -> typing.Union[MetaOapg.properties.loginIP, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["lastLoginDate"]) -> typing.Union[MetaOapg.properties.lastLoginDate, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["lastLoginIP"]) -> typing.Union[MetaOapg.properties.lastLoginIP, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["failedLoginAttempts"]) -> typing.Union[MetaOapg.properties.failedLoginAttempts, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["agreedToTermsOfUse"]) -> typing.Union[MetaOapg.properties.agreedToTermsOfUse, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["active"]) -> typing.Union[MetaOapg.properties.active, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["birthday"]) -> typing.Union[MetaOapg.properties.birthday, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["comments"]) -> typing.Union[MetaOapg.properties.comments, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["nickName"]) -> typing.Union[MetaOapg.properties.nickName, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["deleteInProgress"]) -> typing.Union[MetaOapg.properties.deleteInProgress, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["deleteDate"]) -> typing.Union[MetaOapg.properties.deleteDate, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["passwordReset"]) -> typing.Union[MetaOapg.properties.passwordReset, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["passwordEncrypted"]) -> typing.Union[MetaOapg.properties.passwordEncrypted, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["smsId"]) -> typing.Union[MetaOapg.properties.smsId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["aimId"]) -> typing.Union[MetaOapg.properties.aimId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["icqId"]) -> typing.Union[MetaOapg.properties.icqId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["msnId"]) -> typing.Union[MetaOapg.properties.msnId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ymId"]) -> typing.Union[MetaOapg.properties.ymId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["favoriteActivity"]) -> typing.Union[MetaOapg.properties.favoriteActivity, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["favoriteBibleVerse"]) -> typing.Union[MetaOapg.properties.favoriteBibleVerse, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["favoriteFood"]) -> typing.Union[MetaOapg.properties.favoriteFood, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["favoriteMovie"]) -> typing.Union[MetaOapg.properties.favoriteMovie, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["favoriteMusic"]) -> typing.Union[MetaOapg.properties.favoriteMusic, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["dottedSkins"]) -> typing.Union[MetaOapg.properties.dottedSkins, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["roundedSkins"]) -> typing.Union[MetaOapg.properties.roundedSkins, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["greeting"]) -> typing.Union[MetaOapg.properties.greeting, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["layoutIds"]) -> typing.Union[MetaOapg.properties.layoutIds, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["new"]) -> typing.Union[MetaOapg.properties.new, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["modified"]) -> typing.Union[MetaOapg.properties.modified, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["modificationDate", "fullName", "locale", "timeZone", "defaultUser", "companyId", "actualCompanyId", "passwordExpired", "female", "languageId", "timeZoneId", "resolution", "refreshRate", "recipientId", "recipientName", "recipientAddress", "recipientInternetAddress", "multipleRecipients", "anonymousUser", "userRole", "password", "firstName", "lastName", "emailAddress", "userId", "additionalInfo", "passwordExpirationDate", "middleName", "male", "skinId", "createDate", "loginDate", "loginIP", "lastLoginDate", "lastLoginIP", "failedLoginAttempts", "agreedToTermsOfUse", "active", "birthday", "comments", "nickName", "deleteInProgress", "deleteDate", "passwordReset", "passwordEncrypted", "smsId", "aimId", "icqId", "msnId", "ymId", "favoriteActivity", "favoriteBibleVerse", "favoriteFood", "favoriteMovie", "favoriteMusic", "dottedSkins", "roundedSkins", "greeting", "layoutIds", "new", "modified", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        modificationDate: typing.Union[MetaOapg.properties.modificationDate, str, datetime, schemas.Unset] = schemas.unset,
        fullName: typing.Union[MetaOapg.properties.fullName, str, schemas.Unset] = schemas.unset,
        locale: typing.Union[MetaOapg.properties.locale, dict, frozendict.frozendict, schemas.Unset] = schemas.unset,
        timeZone: typing.Union[MetaOapg.properties.timeZone, dict, frozendict.frozendict, schemas.Unset] = schemas.unset,
        defaultUser: typing.Union[MetaOapg.properties.defaultUser, bool, schemas.Unset] = schemas.unset,
        companyId: typing.Union[MetaOapg.properties.companyId, str, schemas.Unset] = schemas.unset,
        actualCompanyId: typing.Union[MetaOapg.properties.actualCompanyId, str, schemas.Unset] = schemas.unset,
        passwordExpired: typing.Union[MetaOapg.properties.passwordExpired, bool, schemas.Unset] = schemas.unset,
        female: typing.Union[MetaOapg.properties.female, bool, schemas.Unset] = schemas.unset,
        languageId: typing.Union[MetaOapg.properties.languageId, str, schemas.Unset] = schemas.unset,
        timeZoneId: typing.Union[MetaOapg.properties.timeZoneId, str, schemas.Unset] = schemas.unset,
        resolution: typing.Union[MetaOapg.properties.resolution, str, schemas.Unset] = schemas.unset,
        refreshRate: typing.Union[MetaOapg.properties.refreshRate, str, schemas.Unset] = schemas.unset,
        recipientId: typing.Union[MetaOapg.properties.recipientId, str, schemas.Unset] = schemas.unset,
        recipientName: typing.Union[MetaOapg.properties.recipientName, str, schemas.Unset] = schemas.unset,
        recipientAddress: typing.Union[MetaOapg.properties.recipientAddress, str, schemas.Unset] = schemas.unset,
        recipientInternetAddress: typing.Union[MetaOapg.properties.recipientInternetAddress, str, schemas.Unset] = schemas.unset,
        multipleRecipients: typing.Union[MetaOapg.properties.multipleRecipients, bool, schemas.Unset] = schemas.unset,
        anonymousUser: typing.Union[MetaOapg.properties.anonymousUser, bool, schemas.Unset] = schemas.unset,
        userRole: typing.Union['Role', schemas.Unset] = schemas.unset,
        password: typing.Union[MetaOapg.properties.password, str, schemas.Unset] = schemas.unset,
        firstName: typing.Union[MetaOapg.properties.firstName, str, schemas.Unset] = schemas.unset,
        lastName: typing.Union[MetaOapg.properties.lastName, str, schemas.Unset] = schemas.unset,
        emailAddress: typing.Union[MetaOapg.properties.emailAddress, str, schemas.Unset] = schemas.unset,
        userId: typing.Union[MetaOapg.properties.userId, str, schemas.Unset] = schemas.unset,
        additionalInfo: typing.Union[MetaOapg.properties.additionalInfo, dict, frozendict.frozendict, schemas.Unset] = schemas.unset,
        passwordExpirationDate: typing.Union[MetaOapg.properties.passwordExpirationDate, str, datetime, schemas.Unset] = schemas.unset,
        middleName: typing.Union[MetaOapg.properties.middleName, str, schemas.Unset] = schemas.unset,
        male: typing.Union[MetaOapg.properties.male, bool, schemas.Unset] = schemas.unset,
        skinId: typing.Union[MetaOapg.properties.skinId, str, schemas.Unset] = schemas.unset,
        createDate: typing.Union[MetaOapg.properties.createDate, str, datetime, schemas.Unset] = schemas.unset,
        loginDate: typing.Union[MetaOapg.properties.loginDate, str, datetime, schemas.Unset] = schemas.unset,
        loginIP: typing.Union[MetaOapg.properties.loginIP, str, schemas.Unset] = schemas.unset,
        lastLoginDate: typing.Union[MetaOapg.properties.lastLoginDate, str, datetime, schemas.Unset] = schemas.unset,
        lastLoginIP: typing.Union[MetaOapg.properties.lastLoginIP, str, schemas.Unset] = schemas.unset,
        failedLoginAttempts: typing.Union[MetaOapg.properties.failedLoginAttempts, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        agreedToTermsOfUse: typing.Union[MetaOapg.properties.agreedToTermsOfUse, bool, schemas.Unset] = schemas.unset,
        active: typing.Union[MetaOapg.properties.active, bool, schemas.Unset] = schemas.unset,
        birthday: typing.Union[MetaOapg.properties.birthday, str, datetime, schemas.Unset] = schemas.unset,
        comments: typing.Union[MetaOapg.properties.comments, str, schemas.Unset] = schemas.unset,
        nickName: typing.Union[MetaOapg.properties.nickName, str, schemas.Unset] = schemas.unset,
        deleteInProgress: typing.Union[MetaOapg.properties.deleteInProgress, bool, schemas.Unset] = schemas.unset,
        deleteDate: typing.Union[MetaOapg.properties.deleteDate, str, datetime, schemas.Unset] = schemas.unset,
        passwordReset: typing.Union[MetaOapg.properties.passwordReset, bool, schemas.Unset] = schemas.unset,
        passwordEncrypted: typing.Union[MetaOapg.properties.passwordEncrypted, bool, schemas.Unset] = schemas.unset,
        smsId: typing.Union[MetaOapg.properties.smsId, str, schemas.Unset] = schemas.unset,
        aimId: typing.Union[MetaOapg.properties.aimId, str, schemas.Unset] = schemas.unset,
        icqId: typing.Union[MetaOapg.properties.icqId, str, schemas.Unset] = schemas.unset,
        msnId: typing.Union[MetaOapg.properties.msnId, str, schemas.Unset] = schemas.unset,
        ymId: typing.Union[MetaOapg.properties.ymId, str, schemas.Unset] = schemas.unset,
        favoriteActivity: typing.Union[MetaOapg.properties.favoriteActivity, str, schemas.Unset] = schemas.unset,
        favoriteBibleVerse: typing.Union[MetaOapg.properties.favoriteBibleVerse, str, schemas.Unset] = schemas.unset,
        favoriteFood: typing.Union[MetaOapg.properties.favoriteFood, str, schemas.Unset] = schemas.unset,
        favoriteMovie: typing.Union[MetaOapg.properties.favoriteMovie, str, schemas.Unset] = schemas.unset,
        favoriteMusic: typing.Union[MetaOapg.properties.favoriteMusic, str, schemas.Unset] = schemas.unset,
        dottedSkins: typing.Union[MetaOapg.properties.dottedSkins, bool, schemas.Unset] = schemas.unset,
        roundedSkins: typing.Union[MetaOapg.properties.roundedSkins, bool, schemas.Unset] = schemas.unset,
        greeting: typing.Union[MetaOapg.properties.greeting, str, schemas.Unset] = schemas.unset,
        layoutIds: typing.Union[MetaOapg.properties.layoutIds, str, schemas.Unset] = schemas.unset,
        new: typing.Union[MetaOapg.properties.new, bool, schemas.Unset] = schemas.unset,
        modified: typing.Union[MetaOapg.properties.modified, bool, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'User':
        return super().__new__(
            cls,
            *_args,
            modificationDate=modificationDate,
            fullName=fullName,
            locale=locale,
            timeZone=timeZone,
            defaultUser=defaultUser,
            companyId=companyId,
            actualCompanyId=actualCompanyId,
            passwordExpired=passwordExpired,
            female=female,
            languageId=languageId,
            timeZoneId=timeZoneId,
            resolution=resolution,
            refreshRate=refreshRate,
            recipientId=recipientId,
            recipientName=recipientName,
            recipientAddress=recipientAddress,
            recipientInternetAddress=recipientInternetAddress,
            multipleRecipients=multipleRecipients,
            anonymousUser=anonymousUser,
            userRole=userRole,
            password=password,
            firstName=firstName,
            lastName=lastName,
            emailAddress=emailAddress,
            userId=userId,
            additionalInfo=additionalInfo,
            passwordExpirationDate=passwordExpirationDate,
            middleName=middleName,
            male=male,
            skinId=skinId,
            createDate=createDate,
            loginDate=loginDate,
            loginIP=loginIP,
            lastLoginDate=lastLoginDate,
            lastLoginIP=lastLoginIP,
            failedLoginAttempts=failedLoginAttempts,
            agreedToTermsOfUse=agreedToTermsOfUse,
            active=active,
            birthday=birthday,
            comments=comments,
            nickName=nickName,
            deleteInProgress=deleteInProgress,
            deleteDate=deleteDate,
            passwordReset=passwordReset,
            passwordEncrypted=passwordEncrypted,
            smsId=smsId,
            aimId=aimId,
            icqId=icqId,
            msnId=msnId,
            ymId=ymId,
            favoriteActivity=favoriteActivity,
            favoriteBibleVerse=favoriteBibleVerse,
            favoriteFood=favoriteFood,
            favoriteMovie=favoriteMovie,
            favoriteMusic=favoriteMusic,
            dottedSkins=dottedSkins,
            roundedSkins=roundedSkins,
            greeting=greeting,
            layoutIds=layoutIds,
            new=new,
            modified=modified,
            _configuration=_configuration,
            **kwargs,
        )

from dotcms_rest_client.model.role import Role
