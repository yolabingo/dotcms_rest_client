# coding: utf-8

"""
    dotCMS REST API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 3
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from dotcms_rest_client import schemas  # noqa: F401


class RemoteUrlForm(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """


    class MetaOapg:
        
        class properties:
            remoteUrl = schemas.StrSchema
            fileName = schemas.StrSchema
            accessKey = schemas.StrSchema
            urlTimeoutSeconds = schemas.Int32Schema
            maxFileLength = schemas.Int64Schema
            __annotations__ = {
                "remoteUrl": remoteUrl,
                "fileName": fileName,
                "accessKey": accessKey,
                "urlTimeoutSeconds": urlTimeoutSeconds,
                "maxFileLength": maxFileLength,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["remoteUrl"]) -> MetaOapg.properties.remoteUrl: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["fileName"]) -> MetaOapg.properties.fileName: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["accessKey"]) -> MetaOapg.properties.accessKey: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["urlTimeoutSeconds"]) -> MetaOapg.properties.urlTimeoutSeconds: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["maxFileLength"]) -> MetaOapg.properties.maxFileLength: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["remoteUrl", "fileName", "accessKey", "urlTimeoutSeconds", "maxFileLength", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["remoteUrl"]) -> typing.Union[MetaOapg.properties.remoteUrl, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["fileName"]) -> typing.Union[MetaOapg.properties.fileName, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["accessKey"]) -> typing.Union[MetaOapg.properties.accessKey, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["urlTimeoutSeconds"]) -> typing.Union[MetaOapg.properties.urlTimeoutSeconds, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["maxFileLength"]) -> typing.Union[MetaOapg.properties.maxFileLength, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["remoteUrl", "fileName", "accessKey", "urlTimeoutSeconds", "maxFileLength", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        remoteUrl: typing.Union[MetaOapg.properties.remoteUrl, str, schemas.Unset] = schemas.unset,
        fileName: typing.Union[MetaOapg.properties.fileName, str, schemas.Unset] = schemas.unset,
        accessKey: typing.Union[MetaOapg.properties.accessKey, str, schemas.Unset] = schemas.unset,
        urlTimeoutSeconds: typing.Union[MetaOapg.properties.urlTimeoutSeconds, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        maxFileLength: typing.Union[MetaOapg.properties.maxFileLength, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'RemoteUrlForm':
        return super().__new__(
            cls,
            *_args,
            remoteUrl=remoteUrl,
            fileName=fileName,
            accessKey=accessKey,
            urlTimeoutSeconds=urlTimeoutSeconds,
            maxFileLength=maxFileLength,
            _configuration=_configuration,
            **kwargs,
        )
