# coding: utf-8

"""
    dotCMS REST API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 3
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from openapi_client import schemas  # noqa: F401


class WorkflowSchemeImportObjectForm(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """


    class MetaOapg:
        required = {
            "workflowImportObject",
        }
        
        class properties:
        
            @staticmethod
            def workflowImportObject() -> typing.Type['WorkflowSchemeImportExportObjectView']:
                return WorkflowSchemeImportExportObjectView
        
            @staticmethod
            def workflowObject() -> typing.Type['WorkflowSchemeImportExportObjectView']:
                return WorkflowSchemeImportExportObjectView
            
            
            class permissions(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    @staticmethod
                    def items() -> typing.Type['Permission']:
                        return Permission
            
                def __new__(
                    cls,
                    _arg: typing.Union[typing.Tuple['Permission'], typing.List['Permission']],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'permissions':
                    return super().__new__(
                        cls,
                        _arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> 'Permission':
                    return super().__getitem__(i)
            __annotations__ = {
                "workflowImportObject": workflowImportObject,
                "workflowObject": workflowObject,
                "permissions": permissions,
            }
    
    workflowImportObject: 'WorkflowSchemeImportExportObjectView'
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["workflowImportObject"]) -> 'WorkflowSchemeImportExportObjectView': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["workflowObject"]) -> 'WorkflowSchemeImportExportObjectView': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["permissions"]) -> MetaOapg.properties.permissions: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["workflowImportObject", "workflowObject", "permissions", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["workflowImportObject"]) -> 'WorkflowSchemeImportExportObjectView': ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["workflowObject"]) -> typing.Union['WorkflowSchemeImportExportObjectView', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["permissions"]) -> typing.Union[MetaOapg.properties.permissions, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["workflowImportObject", "workflowObject", "permissions", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        workflowImportObject: 'WorkflowSchemeImportExportObjectView',
        workflowObject: typing.Union['WorkflowSchemeImportExportObjectView', schemas.Unset] = schemas.unset,
        permissions: typing.Union[MetaOapg.properties.permissions, list, tuple, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'WorkflowSchemeImportObjectForm':
        return super().__new__(
            cls,
            *_args,
            workflowImportObject=workflowImportObject,
            workflowObject=workflowObject,
            permissions=permissions,
            _configuration=_configuration,
            **kwargs,
        )

from openapi_client.model.permission import Permission
from openapi_client.model.workflow_scheme_import_export_object_view import WorkflowSchemeImportExportObjectView
